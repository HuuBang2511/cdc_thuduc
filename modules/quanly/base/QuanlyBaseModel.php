<?php


namespace app\modules\quanly\base;


use yii\db\ActiveRecord;
use Yii;
use yii\helpers\ArrayHelper;
use app\modules\services\UtilityService;

class QuanlyBaseModel extends ActiveRecord
{
    public function beforeSave($insert)
    {
        if($this->isNewRecord){
            if($this->hasAttribute('status')){
                $this->status = 1;
            }
            if($this->hasAttribute('created_by')){
                $this->created_by = Yii::$app->user->isGuest ? 0 : Yii::$app->user->id;
            }
            if($this->hasAttribute('created_at')){
                $this->created_at = date('Y-m-d H:i:s');
            }
        } else {
            if($this->hasAttribute('updated_by')){
                $this->updated_by = Yii::$app->user->isGuest ? 0 : Yii::$app->user->id;
            }
            if($this->hasAttribute('updated_at')){
                $this->updated_at = date('Y-m-d H:i:s');
            }
        }

        date_default_timezone_set('Asia/Ho_Chi_Minh');
        
        $dateAttributes = ArrayHelper::index($this->getTableSchema()->columns, 'name', 'type');
        if(isset($dateAttributes['date'])) {

            foreach ($dateAttributes['date'] as $dateAttribute) {
                if($this[$dateAttribute->name] != null) {
                    $this[$dateAttribute->name] = UtilityService::convertDateFromMaskedInput($this[$dateAttribute->name]);
                }
            }
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public function afterFind()
    {
        $dateAttributes = ArrayHelper::index($this->getTableSchema()->columns, 'name', 'type');
        if(isset($dateAttributes['date'])) {

            foreach ($dateAttributes['date'] as $dateAttribute) {
                $this[$dateAttribute->name] = UtilityService::convertDateFromDb($this[$dateAttribute->name]);
            }
        }
        parent::afterFind(); // TODO: Change the autogenerated stub
    }

}